name: Build, Tag and Release Master To Production

on:
  workflow_call:
    inputs:
      deploy_confirmation:
        description: 'Outcome if user manually confirmed the start of the deploy script'
        type: string
        required: true
      version_bump:
        description: 'Choose version bump granularity'
        required: true
        type: string
        default: 'minor'
      version_file_path:
        description: The path to the php version file
        type: string
        required: false
        default: app/version.php
      target_repository:
        description: The target repository for the build
        type: string
        required: true
      target_repository_folder:
        description: The folder in which the target repository will be checked out
        type: string
        required: false
        default: target_repository_folder
      image_name:
        description: The name the docker image. This is also the name of the ECR repository
        type: string
        required: true
      dockerfile:
        description: Relative dockerfile to the docker file seen from the repository root. No leading slash.
        type: string
        required: true
      ecs_service:
        description: 'ECS service name'
        type: string
        required: true
      ecs_cluster:
        description: 'ECS cluster name'
        type: string
        required: true
      ecs_region:
        description: 'AWS region'
        type: string
        required: true
      is_repository_protected:
        description: Set this to true if authentication is required
        type: boolean
        default: false

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
        description: AWS access key id
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: AWS access key secret
      RENTMAN_CI_APP_SECRET_KEY:
        required: true
        description: Github token generation secret key

permissions:
  contents: write
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  ensure-master-branch:
    name: Check current branch
    if: ${{ inputs.deploy_confirmation == 'DEPLOY' || inputs.deploy_confirmation == 'YOLO' }}
    outputs:
      status: ${{ steps.early.outputs.status }}
    runs-on: ubuntu-latest
    steps:
      - id: early
        name: Checking if current branch is master
        run: |
          if [ "${{ github.ref }}" != "refs/heads/master" ]; then
            echo "Error this can only run on master branch"
            exit 1
          fi
          echo "status=success" >> $GITHUB_OUTPUT

  tag:
    name: Generating new GitHub tag
    needs: ensure-master-branch
    if: needs.ensure-master-branch.outputs.status == 'success'
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create new minor version tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ''
          default_bump: ${{ inputs.version_bump }}
          dry_run: true

  push-new-tag:
    name: Update version, tagging in GitHub
    needs: tag
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      packages: 'write'
      actions: 'read'
    steps:
      - name: Checkout actions repository
        uses: actions/checkout@v4
        with:
          repository: rentmanpublic/actions
          token: ${{ secrets.GITHUB_TOKEN }}
          path: actions
      - name: Create Git Auth Token
        if: ${{ inputs.is_repository_protected == 'true' }}
        uses: actions/create-github-app-token@v1
        id: github-token
        with:
          app-id: 1112653
          private-key: ${{ secrets.RENTMAN_CI_APP_SECRET_KEY }}
      - name: Set GITHUB_TOKEN
        run: |
          if [ -n "${{ steps.github-token.outputs.token }}" ]; then
            echo "GITHUB_TOKEN=${{ steps.github-token.outputs.token }}" >> $GITHUB_ENV
          else
            echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          fi
      - name: Checkout to release repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target_repository }}
          token: ${{ github.env.GITHUB_TOKEN }}
          path: ${{ inputs.target_repository_folder }}
      - name: Push new tag to github
        run: |
          chmod 700 actions/scripts/authenticated_update_version.sh
          actions/scripts/authenticated_update_version.sh
        env:
          GIT_TAG: ${{ needs.tag.outputs.new_tag }}
          TARGET_REPOSITORY_FOLDER: ${{ inputs.target_repository_folder }}
          VERSION_FILE_PATH: ${{ inputs.version_file_path }}
          TARGET_REPOSITORY: ${{ inputs.target_repository }}